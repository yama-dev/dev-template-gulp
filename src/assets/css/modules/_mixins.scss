
// Style Switching Elements
@include pc(){
  .is-pc { display: block; }
  .is-sp { display: none; }
  .is-pc-inline { display: inline-block; }
  .is-sp-inline { display: none; }
}
@include sp(){
  .is-pc { display: none; }
  .is-sp { display: block; }
  .is-pc-inline { display: none; }
  .is-sp-inline { display: inline-block; }
}

// inline-block
@mixin inline-block($clild_elem: '*') {
  letter-spacing: -.4em;
  text-align: center;
  font-size: 0;
  > #{$clild_elem} {
    display: inline-block;
    letter-spacing: normal;
    vertical-align: top;
  }
}

@mixin counter($numName, $beforeText, $afterText) {
  content: "#{$beforeText}" counter(num_ + $numName) "#{$afterText}";
  counter-increment: num_ + $numName;
}

@mixin under-line($color: #f00, $height: 80%){
  background: linear-gradient(transparent $height, $color 0%);
  display: inline;
}

@mixin form-reset() {
  input, button, textarea, select {
    margin: 0;
    padding: 0;
    background: none;
    border: none;
    border-radius: 0;
    outline: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
}

@mixin js(){
  @at-root html.js &{
    @content;
  }
}

@mixin no-js(){
  @at-root html.no-js &{
    @content;
  }
}

@mixin clearfix {
  &:after {
    content: '.';
    display: block;
    clear: both;
    height: 0;
    visibility: hidden;
  }
}

@mixin line-clamp($count: 3) {
  @if type-of($count) != 'number' {
    @error 'not number';
  }

  @if $count == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $count;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

:root {
  --in-sine: cubic-bezier(.47, 0, .745, .715);
  --out-sine: cubic-bezier(.39, .575, .565, 1);
  --in-out-sine: cubic-bezier(.445, .05, .55, .95);
  
  // quad
  --in-quad: cubic-bezier(.55, .085, .68, .53);
  --out-quad: cubic-bezier(.25, .46, .45, .94);
  --in-out-quad: cubic-bezier(.455, .03, .515, .955);

  // cubic
  --in-cubic: cubic-bezier(.55, .055, .675, .19);
  --out-cubic: cubic-bezier(.215, .61, .355, 1);
  --in-out-cubic: cubic-bezier(.645, .045, .355, 1);

  // quart
  --in-quart: cubic-bezier(.895, .03, .685, .22);
  --out-quart: cubic-bezier(.165, .84, .44, 1);
  --in-out-quart: cubic-bezier(.77, 0, .175, 1);

  // quint
  --in-quint: cubic-bezier(.755, .05, .855, .06);
  --out-quint: cubic-bezier(.23, 1, .32, 1);
  --in-out-quint: cubic-bezier(.86, 0, .07, 1);

  // expo
  --in-expo: cubic-bezier(.95, .05, .795, .035);
  --out-expo: cubic-bezier(.19, 1, .22, 1);
  --in-out-expo: cubic-bezier(1, 0, 0, 1);

  // circ
  --in-circ: cubic-bezier(.6, .04, .98, .335);
  --out-circ: cubic-bezier(.075, .82, .165, 1);
  --in-out-circ: cubic-bezier(.785, .135, .15, .86);

  // back
  --in-back: cubic-bezier(.6, -.28, .735, .045);
  --out-back: cubic-bezier(.175, .885, .32, 1.275);
  --in-out-back: cubic-bezier(.68, -.55, .265, 1.55);
}

